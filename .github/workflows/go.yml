# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CGO build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  cgo-action-arm:
    name: Build Go arm64
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4
      - run:  sudo apt-get update
      - name: apt-install
        uses: Eeems-Org/apt-cache-action@v1.3
        with:
          packages: chromium-browser gir1.2-gst-plugins-base-1.0 libgirepository-2.0-dev libglib2.0-dev python3-pip libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build go program
        run: |
          go install github.com/go-gst/go-gst/cmd/gst-plugin-gen@latest
          go generate
          go build -ldflags="-s -w" -o libwebsink.so -buildmode c-shared .

      - name: pytest
        continue-on-error: true
        env:
          GST_PLUGIN_PATH: ${{ github.workspace }}
          GST_DEBUG: websink:5
          GST_DEBUG_FILE: /tmp/gst.log
        run: |
          pip3 install pytest-selenium pytest webdriver-manager opencv-python
          pytest -s

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: arm-lib
          path: libwebsink.so


  cgo-action-x64:
    name: Build Go x64
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
      - run:  sudo apt-get update
      - name: apt-install
        uses: Eeems-Org/apt-cache-action@v1.3
        with:
          packages: chromium-browser x86info firefox gir1.2-gst-plugins-base-1.0 libgirepository-2.0-dev libglib2.0-dev python3-pip libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build go program
        run: |
          go install github.com/go-gst/go-gst/cmd/gst-plugin-gen@latest
          go generate
          go build -ldflags="-s -w" -o libwebsink.so -buildmode c-shared .

      - name: pytest
        continue-on-error: true
        env:
          GST_PLUGIN_PATH: ${{ github.workspace }}
          GST_DEBUG: websink:5
          GST_DEBUG_FILE: /tmp/gst.log
        run: |
          pip3 install pytest-selenium pytest webdriver-manager opencv-python
          pytest -s

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: x64-lib
          path: libwebsink.so

  release:
    name: Create Release
    needs: [cgo-action-arm, cgo-action-x64]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: arm-lib
          path: ./artifacts/arm

      - name: Download x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x64-lib
          path: ./artifacts/x64

      - name: rename
        run: |
          mv ./artifacts/arm/libwebsink.so ./libwebsink-arm.so
          mv ./artifacts/x64/libwebsink.so ./libwebsink-x64.so

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./libwebsink-arm.so
            ./libwebsink-x64.so