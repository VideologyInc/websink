# This workflow will build a Rust project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-rust

name: Rust build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  rust-build-arm:
    name: Build Rust arm64
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4
      - run:  sudo apt-get update
      - name: apt-install
        uses: Eeems-Org/apt-cache-action@v1.3
        with:
          packages: chromium-browser gir1.2-gst-plugins-base-1.0 libgirepository-2.0-dev libglib2.0-dev python3-pip libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.1
          targets: aarch64-unknown-linux-gnu
          components: clippy

      - name: Rust Cache
        uses: swatinem/rust-cache@v2

      - name: Cargo Clippy
        run: cargo clippy -- -D warnings

      - name: Cargo Test
        run: cargo test

      - name: Build Rust plugin
        run: |
          cargo build --release
          cp target/release/libwebsink.so libwebsink.so

      - name: pytest
        continue-on-error: true
        env:
          GST_PLUGIN_PATH: ${{ github.workspace }}
          GST_DEBUG: websink:5
          GST_DEBUG_FILE: /tmp/gst.log
        run: |
          pip3 install pytest-selenium pytest webdriver-manager opencv-python
          pytest -s

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: arm-rust-lib
          path: libwebsink.so


  rust-build-x64:
    name: Build Rust x64
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
      - run:  sudo apt-get update
      - name: apt-install
        uses: Eeems-Org/apt-cache-action@v1.3
        with:
          packages: chromium-browser x86info firefox gir1.2-gst-plugins-base-1.0 libgirepository-2.0-dev libglib2.0-dev python3-pip libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.85.1
          targets: x86_64-unknown-linux-gnu
          components: clippy

      - name: Rust Cache
        uses: swatinem/rust-cache@v2

      - name: Cargo Clippy
        run: cargo clippy -- -D warnings

      - name: Cargo Test
        run: cargo test

      - name: Build Rust plugin
        run: |
          cargo build --release
          cp target/release/libwebsink.so libwebsink.so

      - name: pytest
        continue-on-error: true
        env:
          GST_PLUGIN_PATH: ${{ github.workspace }}
          GST_DEBUG: websink:5
          GST_DEBUG_FILE: /tmp/gst.log
        run: |
          pip3 install pytest-selenium pytest webdriver-manager opencv-python
          pytest -s

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: x64-rust-lib
          path: libwebsink.so

  rust-release:
    name: Create Rust Release
    needs: [rust-build-arm, rust-build-x64]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: arm-rust-lib
          path: ./artifacts/arm

      - name: Download x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x64-rust-lib
          path: ./artifacts/x64

      - name: rename
        run: |
          mv ./artifacts/arm/libwebsink.so ./libwebsink-rust-arm.so
          mv ./artifacts/x64/libwebsink.so ./libwebsink-rust-x64.so

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./libwebsink-rust-arm.so
            ./libwebsink-rust-x64.so
